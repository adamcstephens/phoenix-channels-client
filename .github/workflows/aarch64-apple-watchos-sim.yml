# based on https://gist.github.com/learnopengles/60c945b92fbe60a0fecaa0143c35c4a for testing in simulator
name: aarch64-apple-watchos-sim

on: pull_request

env:
  TOOLCHAIN: nightly-2023-12-01
  CARGO_TERM_COLOR: always
  DYLD_ROOT_PATH: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/

jobs:
  integration_tests:
    # rust cross-compilation
    # macos-*-xlarge is needed to get M1 chips - https://github.blog/2023-10-02-introducing-the-new-apple-silicon-powered-m1-macos-larger-runner-for-github-actions/
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.TOOLCHAIN }}
          # aarch64-apple-watchos-sim is Tier 3 and so needs to be built from source ðŸ˜­
          components: rust-src
          default: true

      - name: Set up Elixir
        run: brew install elixir
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
          key: ${{ github.workflow }}-${{ github.job }}-toolchain-${{ env.TOOLCHAIN }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: tests/support/test_server/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-2-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: tests/support/test_server/_build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-2-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      - name: Build phoenix_channels_client
        run: cargo build -Zbuild-std --target=aarch64-apple-watchos-sim --all-targets

      - name: Install hex
        run: mix local.hex --force
      - name: Install rebar3
        run: mix local.rebar --force
      - name: Install test server dependencies
        working-directory: ./tests/support/test_server
        run: mix deps.get
      - name: Build test server
        working-directory: ./tests/support/test_server
        run: mix compile
      - name: Run test server in background
        working-directory: ./tests/support/test_server
        run: mix phx.server &

      - name: Set linker
        run: echo "CARGO_TARGET_AARCH64_APPLE_WATCHOS_SIM_LINKER=$PWD/tests/support/watchos/linker_shim.sh" >> $GITHUB_ENV
      - name: Build integration tests
        run: cargo test -Zbuild-std --no-run --target=aarch64-apple-watchos-sim
      - name: Copy integration tests to app bundle
        run: |
          cp `find target/aarch64-apple-watchos-sim/debug/deps/ -perm +111 -type f -name "integration_test-*"` tests/support/watchos/app/integration_test
          ls tests/support/watchos/app/integration_test
      - name: Start Simulator
        uses: futureware-tech/simulator-action@v3
        with:
          os: 'watchOS'
      - name: Install integration tests into Simulator
        run: |
          xcrun simctl install booted tests/support/watchos/app

      - name: Test phoenix_channel_clients
        run: |
          xcrun simctl launch --console booted com.rust.tests | tee output
          grep -q "test result: ok." output
